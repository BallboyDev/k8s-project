name: CI/CD - Build and push Docker Image

# 워크 플로우 실행 시점 정의 
on:
  push:
    branches:
      - main    # main 브랜치에 push 될 때만 실행

jobs:
  build-and-push:
    # 실행 러너 정의 (등록된 러너의 레이블)
    # runs-on: ubuntu-latest
    # runs-on: custom-label-latest
    # runs-on: custom-gitea-runner2
    runs-on: custom-runner-label



    steps:
      # 소스 코드 체크아웃
      - name: Checkout Source code
        uses: actions/checkout@v4

      # Docker CLI 설치
      # - name: Set up Docker CLI
      #   uses: docker/setup-cli-action@v1

      # 직접 Docker CLI 설치
      # - name: Install Docker CLI
      #   run: |
      #     apt-get update
      #     apt-get install -y --no-install-recommends docker.io

      # Docker 공식 저장소를 등록하고 모든 구성요소 설치
      # - name: Set up Docker Repository and Install Buildx
      #   run: |
      #     apt-get update
      #     apt-get install -y ca-certificates curl

      #     install -m 0755 -d /

      # Docker 레지스트리에 로그인
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Docker 이미지 빌드 및 푸시
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          # Dockerfile이 있는 경로
          context: .

          # 빌드 후 푸시 실행
          push: true

          # 이미지에 태그 지정 (<사용자 이름>/<이미지 이름>:<태그>)
          tags: ${{ secrets.DOCKER_USERNAME }}/simple-server:${{ gitea.sha}}
            
      # Docker 이미지 배포
      - name: Deploy to K8S
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets. }}
        