
# 러너의 설정 파일을 저장하기 위한 영구 볼륨 설정
apiVersion: v1
kind: PersistentVolumeClaim

metadata:
  name: gitea-runner-pvc
  labels:
    app: gitea-runner
    type: pvc

spec:
  accessModes:
    - ReadWriteOnce

  resources:
    requests:
      storage: 1Gi

---

# act_runner를 파드로 실행하고 관리하기 위한 Deployment
apiVersion: apps/v1
kind: Deployment

metadata:
  name: gitea-runner-deploy
  labels:
    app: gitea-runner
    type: deployment

spec:
  replicas: 1
  revisionHistoryLimit: 2   # 사용 완료된 레플리카셋 리소스 지우지 않고 남길 개수 (default: 10)
  selector:
    matchLabels:
      app: gitea-runner
  
  template:
    metadata:
      labels:
        app: gitea-runner

    spec:
      containers:
        - name: act-runner
          image: gitea/act_runner:latest
          # image: custom-gitea-runner:latest
          # imagePullPolicy: IfNotPresent

          env: 
            # Gitea 서버 URL 
            - name: GITEA_INSTANCE_URL
              # value: "http://127.0.0.1:59457/"
              value: "http://10.98.155.235:3000"

            # Secret 리소스의 등록 토큰 참조
            - name: GITEA_RUNNER_REGISTRATION_TOKEN
              valueFrom:  
                secretKeyRef:
                  name: token-secret
                  key: token

            # 러너의 이름을 지정
            - name: GITEA_RUNNER_NAME
              value: "k8s-runner"

            # 러너가 처리할 작업의 레이블을 지정
            - name: GITEA_RUNNER_LABELS
              value: "ubuntu-latest:docker://node:18-bullseye"

          volumeMounts:
            # 호스트의 Docker 소켓을 컨테이너에 마운트
            - name: docker-sock
              mountPath: /var/run/docker.sock

            # 영구 볼륨을 컨테이너의 /data 디렉토리에 마운트
            - name: runner-data
              mountPath: /data

      volumes:
        # Docker 소켓을 볼륨으로 정의
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock  
            type: Socket
        
        # 정의한 pvc를 볼륨으로 사용
        - name: runner-data
          persistentVolumeClaim:
            claimName: gitea-runner-pvc